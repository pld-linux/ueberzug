From 160481b9922acb5f183bc5cb2af675cdc508db0c Mon Sep 17 00:00:00 2001
From: Jan Palus <atler@pld-linux.org>
Date: Wed, 13 Jan 2021 01:57:44 +0100
Subject: [PATCH] add support for single process terminals

some terminals (urxvt in daemon mode, mate-terminal) consist of single
process having multiple X windows. This in turn breaks ueberzug which
requires 1:1 mapping between PID and window id. If present use WINDOWID
environment variable set by those terminals as a direct pointer to
window which should be target for displayed image.
---
 ueberzug/xutil.py | 24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/ueberzug/xutil.py b/ueberzug/xutil.py
index 2c6c871..6864aa4 100644
--- a/ueberzug/xutil.py
+++ b/ueberzug/xutil.py
@@ -1,6 +1,7 @@
 """This module contains x11 utils"""
 import functools
 import asyncio
+import os
 
 import Xlib
 import Xlib.display as Xdisplay
@@ -84,6 +85,16 @@ def get_pid_by_window_id(display: Xdisplay.Display, window_id: int):
             else None)
 
 
+def get_visible_window_ids(display: Xdisplay.Display = None):
+    d = display or get_display()
+    try:
+        return d.screen().root.get_full_property(
+                    d.intern_atom('_NET_CLIENT_LIST'),
+                    Xlib.X.AnyPropertyType).value
+    finally:
+        if not display:
+            d.close()
+
 def get_pid_window_id_map():
     """Determines the pid of each mapped window.
 
@@ -92,11 +103,7 @@ def get_pid_window_id_map():
     """
     with get_display() as display:
         root = display.screen().root
-        visible_window_ids = \
-            (root.get_full_property(
-                display.intern_atom('_NET_CLIENT_LIST'),
-                Xlib.X.AnyPropertyType)
-             .value)
+        visible_window_ids = get_visible_window_ids(display)
         return {**{
             get_pid_by_window_id(display, window.id): window.id
             for window in root.query_tree().children
@@ -159,6 +166,13 @@ def get_parent_window_infos():
     Returns:
         list of TerminalWindowInfo
     """
+
+    window_id = os.getenv('WINDOWID')
+
+    if window_id and window_id.isnumeric() and int(window_id) in get_visible_window_ids():
+        pty = get_first_pty(get_parent_pids(process.get_own_pid()))
+        return [TerminalWindowInfo(int(window_id), pty)]
+
     window_infos = []
     client_pids = {}
 
-- 
2.30.0

